# -*- coding: utf-8 -*-
"""count_humans(yolo-model).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jzVFjkA6hW864_r0uFFwoq__Ck5J_Qg0
"""

def count_humans(img_path) :
  import cv2
  from ultralytics import YOLO
  import math
  import numpy as np
#Loading model
  model = YOLO("best_crowded.pt")
  count = 0
# Read image
  img = cv2.imread(img_path)

  results = model(img,stream=True)

      # Getting bbox,confidence and class names informations to work with
      # Assign image to model to detect people and get boxes
  for info in results:
          boxes = info.boxes
          for box in boxes:
              confidence = box.conf[0]
              confidence = math.ceil(confidence * 100)
              Class = int(box.cls[0])
              # Add box if confidence of detection more than or eqaul to 30% and count objects
              if confidence >= 30:
                  x1,y1,x2,y2 = box.xyxy[0]
                  x1, y1, x2, y2 = int(x1),int(y1),int(x2),int(y2)
                  cv2.rectangle(img,(x1,y1),(x2,y2),(0, 255, 0),2)
                  count +=1
          cv2.putText(img, f"Count : {count}", (20, 40), cv2.FONT_HERSHEY_SIMPLEX, 1.3, (255, 255, 255), 5)
          cv2.imwrite(f"counted_image.jpg" , img)
  return count, img